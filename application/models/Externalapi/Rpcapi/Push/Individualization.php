<?php
/**
 * Created by PhpStorm.
 * User: l.gang06@yahoo.com
 * Date: 2017/6/1
 * Time: 15:38
 */

namespace Externalapi\Rpcapi\Push;
use Rpc\RpchttpModel;
use Api\Globals\Functions;
class IndividualizationModel extends RpchttpModel
{
    protected $_individualizationArr = array(
        'deleteStock' => 1,
        'getFocusStock' => 1,
        'addStock' => 1,
        'saveFocusStock' => 1
    );
    /**
     * @param array $params
     * @desc
     *      通用方法
     * @return json
     */
    public function send($params = array())
    {
        $params = Functions::apiParamsCheck($params);
        if (isset($params['cookie']) && is_array($params['cookie'])) {
            $params['cookie'] = Functions::cookieToString($params['cookie']);
        }
        $params = $this->_addReqtype($params);
        return parent::send($params); // TODO: Change the autogenerated stub
    }

    /**
     * @param array $params
     *    stockInfo:股票代码 多个用|分割,
     *    userid:用户id
     * @desc
     *    调用 op=deleteStock接口
     *    删除用户个性化股票
     */
    public function deleteStock($params = array())
    {
        $params = Functions::apiParamsCheck($params);
        $params['op'] = 'deleteStock';
        return $this->send($params);
    }

    /**
     * @param array $params
     *      userid:
     * @desc
     *    调用 op=getFocusStock
     *    获取用户个性化数据
     */
    public function getFocusStock($params = [])
    {
        $params = Functions::apiParamsCheck($params);
        $params['op'] = 'getFocusStock';
        return $this->send($params);
    }

    /**
     * @param array $params
     *      userid:
     *      stockInfo:    股票代码
     * @desc
     *    调用 op=addStock
     *    添加个性化股票
     * @return \Rpc\json
     */
    public function addStock($params = [])
    {
        $params = Functions::apiParamsCheck($params);
        $params['op'] = 'addStock';
        return $this->send($params);
    }

    /**
     * @param array $params
     *      userid:
     *      stockInfo:["300033_1", "600000_2"] json数组 1智能关注，2主动关注
     * @desc
     *      保持个性化股票
     * @return json
     */

    public function saveFocusStock($params = [])
    {
        if (null === json_decode($params['stockInfo'], true)) {
            return json_encode(
                array(
                    'errorcode' => \Api\Globals\Defined::CODE_API_PARAM_CHECK_FAILED,
                    'errormsg' => 'stockInfo 参数必须是json格式'
                )
            );
        }
        $params['stockInfo'] = str_replace("'", '"', $params['stockInfo']);
        $params = Functions::apiParamsCheck($params);
        $params['op'] = 'saveFocusStock';
        return $this->send($params);
    }

    /**
     * @param array $params
     *      stock: 股票代码，拼音汉子
     * @desc
     *    股票搜索
     * @return json
     */
    public function searchStock($params = [])
    {
        $params = Functions::apiParamsCheck($params);
        $params['op'] = 'searchStock';
        return $this->send($params);
    }

    protected function _addReqtype($params)
    {
        if (isset($params['op']) && key_exists($params['op'], $this->_individualizationArr)) {
            $params['@reqtype'] = 'individualizationInterface.php';
        } else {
            $params['@reqtype'] = 'searchStock.php';
        }
        return $params;
    }
    protected function _errorCodeKeyMap()
    {
        return 'errorCode';
    }

    protected function _errorCodeSuccessVal()
    {
        return 0;
    }

    protected function _errorMsgKeyMap()
    {
        return '';
    }

    protected function _resultDataMap()
    {
        return '';
    }


}